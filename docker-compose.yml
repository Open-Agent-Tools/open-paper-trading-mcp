services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=trading_user
      - POSTGRES_PASSWORD=trading_password
      - POSTGRES_DB=trading_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_user -d trading_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - trading-network

  app:
    build: .
    restart: unless-stopped
    ports:
      - "2080:2080"  # FastAPI server
      - "2081:2081"  # MCP server
    environment:
      # Database configuration
      - DATABASE_URL=postgresql+asyncpg://trading_user:trading_password@db:5432/trading_db
      - DB_HOST=db
      - DB_PORT=5432
      - POSTGRES_USER=trading_user
      - POSTGRES_PASSWORD=trading_password
      - POSTGRES_DB=trading_db
      
      # Application configuration
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - SECRET_KEY=your-secret-key-change-this-in-production
      
      # MCP server configuration
      - MCP_SERVER_PORT=2081
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_HTTP_PORT=2081
      - MCP_HTTP_URL=http://localhost:2081
      
      # Quote adapter configuration (use test data by default)
      - QUOTE_ADAPTER_TYPE=test
      - TEST_SCENARIO=ui_testing
      - TEST_DATE=2025-07-30
      
      # Robinhood configuration (override these in .env file)
      - ROBINHOOD_USERNAME=${ROBINHOOD_USERNAME:-}
      - ROBINHOOD_PASSWORD=${ROBINHOOD_PASSWORD:-}
      - ROBINHOOD_TOKEN_PATH=/app/.tokens
    volumes:
      - robinhood_tokens:/app/.tokens
      - trading_logs:/app/logs
      - server_logs:/tmp
      - ./app:/app/app:ro  # Mount app directory for development (read-only)
    depends_on:
      db:
        condition: service_healthy
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  robinhood_tokens:
  trading_logs:
  server_logs:

networks:
  trading-network:
    driver: bridge